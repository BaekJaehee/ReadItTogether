def backendImage
def frontendImage
def modelImage

pipeline {
    agent any
    environment {
        // 환경 변수 설정
        GIT_REGISTRY_CREDENTIALS = credentials('gitlab_tokken')
        DOCKER_REGISTRY_CREDENTIALS = credentials('docker')
        GCP_SERVICE_ACCOUNT_JSON = credentials('GCP_SERVICE_ACCOUNT_JSON')
        FRONT_IMAGE_NAME = "${env.FRONT_IMAGE_NAME}"
        DATABASE_URL = "${env.DATABASE_URL}"
        REACT_APP_API_BASE_URL = "${env.REACT_APP_API_BASE_URL}"
        DOCKER_COMPOSE_FILE = "docker-compose.yml"       
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    git credentialsId: 'gitlab_tokken', url: 'https://lab.ssafy.com/s10-bigdata-recom-sub2/S10P22D206'
                }
            }
        }

        stage('Build and Push the Front-end Docker Image') {
            steps {
                script {
                    sh 'echo "Starting Build Front Docker Image"'
                    dir('front') {
                        withDockerRegistry(credentialsId: 'docker', url: 'https://registry.hub.docker.com') {
                            
                             frontendImage = docker.build("${FRONT_IMAGE_NAME}:${env.BUILD_NUMBER}",
                            //   "--build-arg REACT_APP_API_BASE_URL=${env.REACT_APP_API_BASE_URL} .")  //추후 예정
                           
                           
                            if (frontendImage != 0) {
                                echo "Docker build succeeded: ${FRONT_IMAGE_NAME}:${env.BUILD_NUMBER}"
                                docker.withRegistry('https://registry.hub.docker.com', 'docker') {
                                    frontendImage.push()
                            }
                            } else {
                                error "Docker build failed"
                            }
                        }
                    }
                }
            }
            
        }
        stage('Deploy') {
            steps {
                script {
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} pull"
                    sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d"
                }
            }
        }
    }
}

